float4x4 g_matView;

cbuffer InstBuffer
{
	float4 g_insts[4096];
};

void Default2D_Vertex( in float2 tex,
	in uint instID,
	out float2 outTex,
	out float4 outPos )
{
	float2 pos = ( tex * 2.0 - 1.0 ) * float2( 1.0, -1.0 );
	float4 center_mat = g_insts[instID];
	float4 tex_ratio_depth = g_insts[instID + 1];
	
	float2 matX = center_mat.zw;
	float2 matY = float2( -matX.y, matX.x ) * tex_ratio_depth.z;

	center_mat.xy = center_mat.xy + pos.x * matX;
	center_mat.xy = center_mat.xy + pos.y * matY;
	outPos = mul( g_matView, float4( center_mat.xy, tex_ratio_depth.w, 1.0 ) );
	
	float2 vtex = floor( tex_ratio_depth.xy );
	float2 dTex = 1.0 - ( tex_ratio_depth.xy - vtex );
	vtex = vtex / 2048.0;
	outTex = vtex + dTex * tex;
}

void Default2DUI_Vertex( in float2 tex,
	in uint instID,
	out float2 outTex,
	out float4 outPos )
{
	float2 pos = ( tex * 2.0 - 1.0 );
	float4 center_mat = g_insts[instID];
	float4 tex_ratio_depth = g_insts[instID + 1];
	
	float2 matX = center_mat.zw;
	float2 matY = float2( -matX.y, matX.x ) * tex_ratio_depth.z;

	center_mat.xy = center_mat.xy + pos.x * matX;
	center_mat.xy = center_mat.xy + pos.y * matY;
	outPos = mul( g_matView, float4( center_mat.xy, tex_ratio_depth.w, 1.0 ) );
	
	float2 vtex = floor( tex_ratio_depth.xy );
	float2 dTex = 1.0 - ( tex_ratio_depth.xy - vtex );
	vtex = vtex / 2048.0;
	outTex = vtex + dTex * tex;
}